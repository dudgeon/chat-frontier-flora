<testsuites id="" name="" tests="90" failures="0" skipped="90" errors="0" time="0.08601299999999998">
<testsuite name="accessibility.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="chromium" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Accessibility @accessibility › homepage should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › sign up form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › login form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › forms should be keyboard navigable" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › error messages should be announced to screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-flow.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="chromium" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Authentication Flow › Initial App State › should load the app and show authentication UI" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Initial App State › should be accessible" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should successfully register a new user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should show validation errors for invalid input" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should validate password requirements in real-time" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should successfully log in existing user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should show error for invalid credentials" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should restrict access to protected routes when not authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should allow access to protected routes when authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Logout Flow › should successfully log out user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Mobile Responsiveness › should work correctly on mobile devices" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match sign up form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match login form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="firefox" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Accessibility @accessibility › homepage should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › sign up form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › login form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › forms should be keyboard navigable" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › error messages should be announced to screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-flow.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="firefox" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Authentication Flow › Initial App State › should load the app and show authentication UI" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Initial App State › should be accessible" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should successfully register a new user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should show validation errors for invalid input" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should validate password requirements in real-time" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should successfully log in existing user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should show error for invalid credentials" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should restrict access to protected routes when not authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should allow access to protected routes when authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Logout Flow › should successfully log out user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Mobile Responsiveness › should work correctly on mobile devices" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match sign up form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match login form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="webkit" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Accessibility @accessibility › homepage should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › sign up form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › login form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › forms should be keyboard navigable" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › error messages should be announced to screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-flow.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="webkit" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Authentication Flow › Initial App State › should load the app and show authentication UI" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Initial App State › should be accessible" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should successfully register a new user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should show validation errors for invalid input" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should validate password requirements in real-time" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should successfully log in existing user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should show error for invalid credentials" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should restrict access to protected routes when not authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should allow access to protected routes when authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Logout Flow › should successfully log out user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Mobile Responsiveness › should work correctly on mobile devices" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match sign up form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match login form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="Mobile Chrome" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Accessibility @accessibility › homepage should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › sign up form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › login form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › forms should be keyboard navigable" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › error messages should be announced to screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-flow.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="Mobile Chrome" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Authentication Flow › Initial App State › should load the app and show authentication UI" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Initial App State › should be accessible" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should successfully register a new user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should show validation errors for invalid input" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should validate password requirements in real-time" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should successfully log in existing user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should show error for invalid credentials" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should restrict access to protected routes when not authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should allow access to protected routes when authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Logout Flow › should successfully log out user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Mobile Responsiveness › should work correctly on mobile devices" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match sign up form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match login form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="Mobile Safari" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Accessibility @accessibility › homepage should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › sign up form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › login form should be accessible" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › forms should be keyboard navigable" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility @accessibility › error messages should be announced to screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-flow.spec.ts" timestamp="2025-06-07T16:39:25.663Z" hostname="Mobile Safari" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Authentication Flow › Initial App State › should load the app and show authentication UI" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Initial App State › should be accessible" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should successfully register a new user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should show validation errors for invalid input" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Registration Flow › should validate password requirements in real-time" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should successfully log in existing user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › User Login Flow › should show error for invalid credentials" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should restrict access to protected routes when not authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Role-Based Access Control › should allow access to protected routes when authenticated" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Logout Flow › should successfully log out user" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Mobile Responsiveness › should work correctly on mobile devices" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match sign up form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › Visual Regression › should match login form visual snapshot" classname="auth-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>