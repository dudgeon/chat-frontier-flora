# Cursor Rules for chat-frontier-flora

## CRITICAL DEPLOYMENT WORKFLOW - NEVER VIOLATE
**MANDATORY PROTOCOL: NO EXCEPTIONS**

1. **Local Testing First**: All changes MUST be tested locally with full verification
2. **PR for Preview Deploy**: Create PR to trigger preview deployment - NEVER merge without this step
3. **Preview Testing**: Test changes on the preview URL thoroughly
4. **CI Verification**: Ensure all CI checks pass on the preview
5. **Only Then Merge**: Merge to main only after preview testing confirms everything works
6. **Production Verification**: Test production deployment after merge

**VIOLATION OF THIS WORKFLOW IS A CRITICAL FAILURE**

If the AI attempts to merge to main without preview testing, it must:
- STOP immediately
- Acknowledge the workflow violation
- Create PR for preview testing instead
- Wait for explicit user approval after preview testing

## Authentication and Testing Rules

- Always run from apps/web directory for Expo commands
- Use data-testid selectors for E2E tests, not input[name] selectors
- Verify webpack compilation shows "compiled with 1 warning" not "1 error"
- Test both localhost and production environments appropriately
- Never claim success without evidence (curl responses, test results, user confirmation)

## Cost Management

- Use Sonnet for routine tasks
- Only use Opus for complex architectural decisions
- Make minimal changes - don't touch unrelated files
- Stop immediately if the AI starts making unrelated changes
- Document expensive mistakes to prevent repetition

## PRODUCTION DEPLOYMENT PROTOCOL

### ABSOLUTE RULES:
1. **NEVER `git push origin main` without PR and preview testing**
2. **ALWAYS run Expo commands from `apps/web` directory**
3. **ALWAYS verify "web compiled with 1 warning" (not error)**
4. **ALWAYS test preview deployment before merging**
5. **ALWAYS verify production deployment status after merge**

### MANDATORY 5-STEP WORKFLOW:
1. **Local Testing**: `cd apps/web && npm run web` + verification
2. **Feature Branch**: Create branch, commit, push to feature branch
3. **Preview Testing**: Create PR, test preview URL thoroughly
4. **CI Verification**: All automated checks must pass
5. **Production Deploy**: Merge only after preview success, then verify production

### PROHIBITED ACTIONS:
- ‚ùå Direct push to main branch
- ‚ùå Running Expo from root directory
- ‚ùå Merging without preview testing
- ‚ùå Claiming success without evidence
- ‚ùå Ignoring compilation errors

### STATUS INDICATORS:
- ‚úÖ VERIFIED WORKING (all steps completed with evidence)
- ‚ö†Ô∏è PARTIALLY WORKING (specify what works/doesn't)
- ‚ùå BROKEN (compilation errors, failures)
- üîÑ IN PROGRESS (making changes)
- ‚ùì UNKNOWN (need to investigate)

### EMERGENCY ROLLBACK:
```bash
git revert HEAD -m 1 && git push origin main
```

**See docs/PRODUCTION_DEPLOYMENT_PROTOCOL.md for complete procedures**
