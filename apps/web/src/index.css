@layer base {
  /* NativeWind base styles */
}

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Modern TextInput styling inspired by the React Native guide */
input {
  border: 1px solid #E5E7EB !important; /* gray-300 */
  border-radius: 0.75rem !important; /* 12px - more modern */
  padding: 0.875rem 1rem !important; /* 14px 16px */
  background-color: white !important;
  font-size: 1rem !important;
  line-height: 1.25rem !important;
  outline: none !important;
  transition: all 0.2s ease-in-out !important;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
  color: #111827 !important; /* gray-900 */
}

input:focus {
  border-color: #3B82F6 !important; /* blue-500 */
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1) !important;
  background-color: #FEFEFE !important;
}

input:hover:not(:focus) {
  border-color: #D1D5DB !important; /* gray-400 */
  background-color: #FAFAFA !important;
}

input::placeholder {
  color: #9CA3AF !important; /* gray-400 */
  opacity: 1 !important;
}

/* Ensure proper styling for disabled inputs */
input:disabled {
  background-color: #F3F4F6 !important; /* gray-100 */
  border-color: #E5E7EB !important; /* gray-300 */
  color: #6B7280 !important; /* gray-500 */
  cursor: not-allowed !important;
}

/* Remove default browser styling */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none !important;
  margin: 0 !important;
}

input[type=number] {
  -moz-appearance: textfield !important;
}

:root {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
}

/* COMPREHENSIVE CHECKBOX TEXT WRAPPING SOLUTION */

/* Target the main form container to ensure proper width constraints */
.css-view-175oi2r[style*="max-width: 384px"] {
  overflow: hidden !important;
}

/* Target checkbox row containers specifically */
.css-view-175oi2r[style*="flex-direction: row"][style*="align-items: center"][style*="margin-top: 8px"] {
  max-width: 100% !important;
  overflow: hidden !important;
  flex-wrap: wrap !important;
}

/* Target the checkbox wrapper div */
.css-view-175oi2r[role="checkbox"] {
  max-width: 100% !important;
  flex-wrap: wrap !important;
  align-items: flex-start !important;
  overflow: hidden !important;
}

/* Target the text div inside checkbox specifically */
.css-view-175oi2r[role="checkbox"] .css-text-146c3p1[dir="auto"] {
  word-wrap: break-word !important;
  overflow-wrap: break-word !important;
  white-space: normal !important;
  max-width: calc(100% - 32px) !important; /* Account for checkbox width + margin */
  line-height: 1.4 !important;
  hyphens: auto !important;
  flex: 1 !important;
  min-width: 0 !important; /* Allow flex item to shrink below content size */
}

/* More specific targeting for the exact class structure */
div[data-testid="development-consent"] .css-text-146c3p1[dir="auto"],
div[data-testid="age-verification"] .css-text-146c3p1[dir="auto"] {
  word-wrap: break-word !important;
  overflow-wrap: break-word !important;
  white-space: normal !important;
  max-width: calc(100% - 32px) !important;
  line-height: 1.4 !important;
  hyphens: auto !important;
  flex: 1 !important;
  min-width: 0 !important;
  overflow: hidden !important;
}

/* Ensure the checkbox container itself respects width limits */
div[data-testid="development-consent"],
div[data-testid="age-verification"] {
  max-width: 100% !important;
  overflow: hidden !important;
  flex-wrap: wrap !important;
}

/* Target any text element with the r-maxWidth-1jucqua class */
.r-maxWidth-1jucqua {
  max-width: calc(100% - 32px) !important;
  word-wrap: break-word !important;
  overflow-wrap: break-word !important;
  white-space: normal !important;
  line-height: 1.4 !important;
  hyphens: auto !important;
  min-width: 0 !important;
}

/* Fallback for any dir="auto" text elements */
div[dir="auto"]:not([role]) {
  word-wrap: break-word !important;
  overflow-wrap: break-word !important;
  white-space: normal !important;
  line-height: 1.4 !important;
}
